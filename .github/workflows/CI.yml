name: CI

on:
  pull_request:
  push:
    branches:
      - main
    tags:
      - v*

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

env:
  GO_VERSION: "1.20"

jobs:
  test:
    name: Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest

    steps:
      - name: Set up Go ${{ env.GO_VERSION }}
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Download Dependencies
        run: go mod download

      - name: Run Tests
        run: go test -race ./...

  lint:
    name: Lint
    runs-on: ubuntu-latest

    steps:
      - name: Set up Go ${{ env.GO_VERSION }}
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Run Linting
        uses: golangci/golangci-lint-action@v3
        with:
          version: latest

  release:
    name: Release
    runs-on: ubuntu-latest

    needs:
      - test
      - lint

    if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Fetch Existing Tags
        run: git fetch --force --tags

      - name: Parse Release Version
        id: version
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Set up Go ${{ env.GO_VERSION }}
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Publish Release Notes
        uses: release-drafter/release-drafter@v5
        with:
            version: ${{ steps.version.outputs.version }}
            publish: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v4
        with:
          version: latest
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          HOMEBREW_TAP_TOKEN: ${{ secrets.HOMEBREW_TAP_TOKEN }}
